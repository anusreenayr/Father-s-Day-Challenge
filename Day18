# SINGLE NUMBER
class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        result = 0
        for num in  nums:
            result ^= num
        return result

# CONTAINER WITH MOST WATER
class Solution:
    def maxArea(self, height: List[int]) -> int:
        l, r = 0, len(height) - 1
        max_area = 0
        curr = []

        while l < r:
            curr_height = min(height[l], height[r])
            curr_width = r - l
            curr_area = curr_height * curr_width
            max_area = max(max_area, curr_area)

            if height[l] < height[r]:
                l += 1
            else:
                r -= 1
        return max_area
