# PASCAL'S TRIANGLE II
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        res = [[1]]
        
        for i in range(rowIndex):  
            # temp array
            temp = [0] + res[-1] + [0]
            row = []
            # length of the row + 1, so this way the row below will have +1 rows
            for j in range(len(res[-1]) + 1):
                row.append(temp[j] + temp[j + 1])
            # appending with the result
            res.append(row)
        return res[-1]  # returning the last row


# VALID PARENTHESIS STRING
class Solution:
    def checkValidString(self, s: str) -> bool:
        leftMin = 0
        leftMax = 0

        for c in s:
            if c == "(":
                leftMin, leftMax = leftMin + 1, leftMax + 1
            elif c == ")":
                leftMin, leftMax = leftMin - 1, leftMax - 1
            else:
                leftMin, leftMax = leftMin - 1, leftMax + 1
            if leftMax < 0:
                return False
            if leftMin < 0:
                leftMin = 0
        return leftMin  == 0
